{"{\"assumptions\":{},\"sourceRoot\":\"/Users/purvashapadhy/SIT725-2024-T1-prac-6/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/purvashapadhy/SIT725-2024-T1-prac-6\",\"filename\":\"/Users/purvashapadhy/SIT725-2024-T1-prac-6/test/test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/purvashapadhy/SIT725-2024-T1-prac-6\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.24.4:development":{"value":{"code":"const chai = require('chai');\nconst chaiHttp = require('chai-http');\nconst app = require('./app'); // Assuming your Express app is defined in app.js\nconst expect = chai.expect;\nchai.use(chaiHttp);\ndescribe('API Tests', function () {\n  it('Should return the sum of two numbers', function (done) {\n    chai.request(app).get('/addnumbers/5/10').end(function (err, res) {\n      expect(res).to.have.status(200);\n      expect(res.body.result).to.equal(15); // Adjusted assertion syntax\n      done();\n    });\n  });\n  it('Should return status code 400 for non-numeric inputs', function (done) {\n    chai.request(app).get('/addnumbers/abc/xyz').end(function (err, res) {\n      expect(res).to.have.status(400);\n      done();\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjaGFpIiwicmVxdWlyZSIsImNoYWlIdHRwIiwiYXBwIiwiZXhwZWN0IiwidXNlIiwiZGVzY3JpYmUiLCJpdCIsImRvbmUiLCJyZXF1ZXN0IiwiZ2V0IiwiZW5kIiwiZXJyIiwicmVzIiwidG8iLCJoYXZlIiwic3RhdHVzIiwiYm9keSIsInJlc3VsdCIsImVxdWFsIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvcHVydmFzaGFwYWRoeS9TSVQ3MjUtMjAyNC1UMS1wcmFjLTYvdGVzdC8iLCJzb3VyY2VzIjpbInRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2hhaSA9IHJlcXVpcmUoJ2NoYWknKTtcbmNvbnN0IGNoYWlIdHRwID0gcmVxdWlyZSgnY2hhaS1odHRwJyk7XG5jb25zdCBhcHAgPSByZXF1aXJlKCcuL2FwcCcpOyAvLyBBc3N1bWluZyB5b3VyIEV4cHJlc3MgYXBwIGlzIGRlZmluZWQgaW4gYXBwLmpzXG5jb25zdCBleHBlY3QgPSBjaGFpLmV4cGVjdDtcblxuY2hhaS51c2UoY2hhaUh0dHApO1xuXG5kZXNjcmliZSgnQVBJIFRlc3RzJywgZnVuY3Rpb24oKSB7XG4gIGl0KCdTaG91bGQgcmV0dXJuIHRoZSBzdW0gb2YgdHdvIG51bWJlcnMnLCBmdW5jdGlvbihkb25lKSB7XG4gICAgY2hhaS5yZXF1ZXN0KGFwcClcbiAgICAgIC5nZXQoJy9hZGRudW1iZXJzLzUvMTAnKVxuICAgICAgLmVuZChmdW5jdGlvbihlcnIsIHJlcykge1xuICAgICAgICBleHBlY3QocmVzKS50by5oYXZlLnN0YXR1cygyMDApO1xuICAgICAgICBleHBlY3QocmVzLmJvZHkucmVzdWx0KS50by5lcXVhbCgxNSk7IC8vIEFkanVzdGVkIGFzc2VydGlvbiBzeW50YXhcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gIH0pO1xuXG4gIGl0KCdTaG91bGQgcmV0dXJuIHN0YXR1cyBjb2RlIDQwMCBmb3Igbm9uLW51bWVyaWMgaW5wdXRzJywgZnVuY3Rpb24oZG9uZSkge1xuICAgIGNoYWkucmVxdWVzdChhcHApXG4gICAgICAuZ2V0KCcvYWRkbnVtYmVycy9hYmMveHl6JylcbiAgICAgIC5lbmQoZnVuY3Rpb24oZXJyLCByZXMpIHtcbiAgICAgICAgZXhwZWN0KHJlcykudG8uaGF2ZS5zdGF0dXMoNDAwKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUM1QixNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFDckMsTUFBTUUsR0FBRyxHQUFHRixPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUM5QixNQUFNRyxNQUFNLEdBQUdKLElBQUksQ0FBQ0ksTUFBTTtBQUUxQkosSUFBSSxDQUFDSyxHQUFHLENBQUNILFFBQVEsQ0FBQztBQUVsQkksUUFBUSxDQUFDLFdBQVcsRUFBRSxZQUFXO0VBQy9CQyxFQUFFLENBQUMsc0NBQXNDLEVBQUUsVUFBU0MsSUFBSSxFQUFFO0lBQ3hEUixJQUFJLENBQUNTLE9BQU8sQ0FBQ04sR0FBRyxDQUFDLENBQ2RPLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUN2QkMsR0FBRyxDQUFDLFVBQVNDLEdBQUcsRUFBRUMsR0FBRyxFQUFFO01BQ3RCVCxNQUFNLENBQUNTLEdBQUcsQ0FBQyxDQUFDQyxFQUFFLENBQUNDLElBQUksQ0FBQ0MsTUFBTSxDQUFDLEdBQUcsQ0FBQztNQUMvQlosTUFBTSxDQUFDUyxHQUFHLENBQUNJLElBQUksQ0FBQ0MsTUFBTSxDQUFDLENBQUNKLEVBQUUsQ0FBQ0ssS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7TUFDdENYLElBQUksQ0FBQyxDQUFDO0lBQ1IsQ0FBQyxDQUFDO0VBQ04sQ0FBQyxDQUFDO0VBRUZELEVBQUUsQ0FBQyxzREFBc0QsRUFBRSxVQUFTQyxJQUFJLEVBQUU7SUFDeEVSLElBQUksQ0FBQ1MsT0FBTyxDQUFDTixHQUFHLENBQUMsQ0FDZE8sR0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQzFCQyxHQUFHLENBQUMsVUFBU0MsR0FBRyxFQUFFQyxHQUFHLEVBQUU7TUFDdEJULE1BQU0sQ0FBQ1MsR0FBRyxDQUFDLENBQUNDLEVBQUUsQ0FBQ0MsSUFBSSxDQUFDQyxNQUFNLENBQUMsR0FBRyxDQUFDO01BQy9CUixJQUFJLENBQUMsQ0FBQztJQUNSLENBQUMsQ0FBQztFQUNOLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["chai","require","chaiHttp","app","expect","use","describe","it","done","request","get","end","err","res","to","have","status","body","result","equal"],"sourceRoot":"/Users/purvashapadhy/SIT725-2024-T1-prac-6/test/","sources":["test.js"],"sourcesContent":["const chai = require('chai');\nconst chaiHttp = require('chai-http');\nconst app = require('./app'); // Assuming your Express app is defined in app.js\nconst expect = chai.expect;\n\nchai.use(chaiHttp);\n\ndescribe('API Tests', function() {\n  it('Should return the sum of two numbers', function(done) {\n    chai.request(app)\n      .get('/addnumbers/5/10')\n      .end(function(err, res) {\n        expect(res).to.have.status(200);\n        expect(res.body.result).to.equal(15); // Adjusted assertion syntax\n        done();\n      });\n  });\n\n  it('Should return status code 400 for non-numeric inputs', function(done) {\n    chai.request(app)\n      .get('/addnumbers/abc/xyz')\n      .end(function(err, res) {\n        expect(res).to.have.status(400);\n        done();\n      });\n  });\n});\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AACrC,MAAME,GAAG,GAAGF,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AAC9B,MAAMG,MAAM,GAAGJ,IAAI,CAACI,MAAM;AAE1BJ,IAAI,CAACK,GAAG,CAACH,QAAQ,CAAC;AAElBI,QAAQ,CAAC,WAAW,EAAE,YAAW;EAC/BC,EAAE,CAAC,sCAAsC,EAAE,UAASC,IAAI,EAAE;IACxDR,IAAI,CAACS,OAAO,CAACN,GAAG,CAAC,CACdO,GAAG,CAAC,kBAAkB,CAAC,CACvBC,GAAG,CAAC,UAASC,GAAG,EAAEC,GAAG,EAAE;MACtBT,MAAM,CAACS,GAAG,CAAC,CAACC,EAAE,CAACC,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC;MAC/BZ,MAAM,CAACS,GAAG,CAACI,IAAI,CAACC,MAAM,CAAC,CAACJ,EAAE,CAACK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;MACtCX,IAAI,CAAC,CAAC;IACR,CAAC,CAAC;EACN,CAAC,CAAC;EAEFD,EAAE,CAAC,sDAAsD,EAAE,UAASC,IAAI,EAAE;IACxER,IAAI,CAACS,OAAO,CAACN,GAAG,CAAC,CACdO,GAAG,CAAC,qBAAqB,CAAC,CAC1BC,GAAG,CAAC,UAASC,GAAG,EAAEC,GAAG,EAAE;MACtBT,MAAM,CAACS,GAAG,CAAC,CAACC,EAAE,CAACC,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC;MAC/BR,IAAI,CAAC,CAAC;IACR,CAAC,CAAC;EACN,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}},"mtime":1713756698683}}